define(function(require){'use strict';var env=require('./core/env');var eventTool=require('./core/event');var util=require('./core/util');var Draggable=require('./mixin/Draggable');var GestureMgr=require('./core/GestureMgr');var Eventful=require('./mixin/Eventful');var mouseHandlerNames=['click','dblclick','mousewheel','mouseout'];!usePointerEvent()&&mouseHandlerNames.push('mouseup','mousedown','mousemove');var touchHandlerNames=['touchstart','touchend','touchmove'];var pointerHandlerNames=['pointerdown','pointerup','pointermove'];var TOUCH_CLICK_DELAY=300;var addEventListener=eventTool.addEventListener;var removeEventListener=eventTool.removeEventListener;var normalizeEvent=eventTool.normalizeEvent;function makeEventPacket(eveType,target,event){return{type:eveType,event:event,target:target,cancelBubble:false,offsetX:event.zrX,offsetY:event.zrY,gestureEvent:event.gestureEvent,pinchX:event.pinchX,pinchY:event.pinchY,pinchScale:event.pinchScale,wheelDelta:event.zrDelta};}
var domHandlers={mousemove:function(event){event=normalizeEvent(this.root,event);var x=event.zrX;var y=event.zrY;var hovered=this.findHover(x,y,null);var lastHovered=this._hovered;this._hovered=hovered;this.root.style.cursor=hovered?hovered.cursor:this._defaultCursorStyle;if(lastHovered&&hovered!==lastHovered&&lastHovered.__zr){this._dispatchProxy(lastHovered,'mouseout',event);}
this._dispatchProxy(hovered,'mousemove',event);if(hovered&&hovered!==lastHovered){this._dispatchProxy(hovered,'mouseover',event);}},mouseout:function(event){event=normalizeEvent(this.root,event);var element=event.toElement||event.relatedTarget;if(element!=this.root){while(element&&element.nodeType!=9){if(element===this.root){return;}
element=element.parentNode;}}
this._dispatchProxy(this._hovered,'mouseout',event);this.trigger('globalout',{event:event});},touchstart:function(event){event=normalizeEvent(this.root,event);this._lastTouchMoment=new Date();processGesture(this,event,'start');domHandlers.mousemove.call(this,event);domHandlers.mousedown.call(this,event);setTouchTimer(this);},touchmove:function(event){event=normalizeEvent(this.root,event);processGesture(this,event,'change');domHandlers.mousemove.call(this,event);setTouchTimer(this);},touchend:function(event){event=normalizeEvent(this.root,event);processGesture(this,event,'end');domHandlers.mouseup.call(this,event);if(+new Date()-this._lastTouchMoment<TOUCH_CLICK_DELAY){domHandlers.click.call(this,event);}
setTouchTimer(this);}};util.each(['click','mousedown','mouseup','mousewheel','dblclick'],function(name){domHandlers[name]=function(event){event=normalizeEvent(this.root,event);var hovered=this.findHover(event.zrX,event.zrY,null);if(name==='mousedown'){this._downel=hovered;this._upel=hovered;}
else if(name==='mosueup'){this._upel=hovered;}
else if(name==='click'){if(this._downel!==this._upel){return;}}
this._dispatchProxy(hovered,name,event);};});function processGesture(zrHandler,event,stage){var gestureMgr=zrHandler._gestureMgr;stage==='start'&&gestureMgr.clear();var gestureInfo=gestureMgr.recognize(event,zrHandler.findHover(event.zrX,event.zrY,null),zrHandler.root);stage==='end'&&gestureMgr.clear();if(gestureInfo){var type=gestureInfo.type;event.gestureEvent=type;zrHandler._dispatchProxy(gestureInfo.target,type,gestureInfo.event);}}
function initDomHandler(instance){var handlerNames=touchHandlerNames.concat(pointerHandlerNames);for(var i=0;i<handlerNames.length;i++){var name=handlerNames[i];instance._handlers[name]=util.bind(domHandlers[name],instance);}
for(var i=0;i<mouseHandlerNames.length;i++){var name=mouseHandlerNames[i];instance._handlers[name]=makeMouseHandler(domHandlers[name],instance);}
function makeMouseHandler(fn,instance){return function(){if(instance._touching){return;}
return fn.apply(instance,arguments);};}}
var Handler=function(root,storage,painter){Eventful.call(this);this.root=root;this.storage=storage;this.painter=painter;this._hovered;this._lastTouchMoment;this._lastX;this._lastY;this._defaultCursorStyle='default';this._gestureMgr=new GestureMgr();this._handlers=[];this._touching=false;this._touchTimer;initDomHandler(this);if(usePointerEvent()){mountHandlers(pointerHandlerNames,this);}
else if(useTouchEvent()){mountHandlers(touchHandlerNames,this);}
mountHandlers(mouseHandlerNames,this);Draggable.call(this);function mountHandlers(handlerNames,instance){util.each(handlerNames,function(name){addEventListener(root,eventNameFix(name),instance._handlers[name]);},instance);}};Handler.prototype={constructor:Handler,resize:function(event){this._hovered=null;},dispatch:function(eventName,eventArgs){var handler=this._handlers[eventName];handler&&handler.call(this,eventArgs);},dispose:function(){var root=this.root;var handlerNames=mouseHandlerNames.concat(touchHandlerNames);for(var i=0;i<handlerNames.length;i++){var name=handlerNames[i];removeEventListener(root,eventNameFix(name),this._handlers[name]);}
this.root=this.storage=this.painter=null;},setDefaultCursorStyle:function(cursorStyle){this._defaultCursorStyle=cursorStyle;},_dispatchProxy:function(targetEl,eventName,event){var eventHandler='on'+eventName;var eventPacket=makeEventPacket(eventName,targetEl,event);var el=targetEl;while(el){el[eventHandler]&&(eventPacket.cancelBubble=el[eventHandler].call(el,eventPacket));el.trigger(eventName,eventPacket);el=el.parent;if(eventPacket.cancelBubble){break;}}
if(!eventPacket.cancelBubble){this.trigger(eventName,eventPacket);this.painter&&this.painter.eachOtherLayer(function(layer){if(typeof(layer[eventHandler])=='function'){layer[eventHandler].call(layer,eventPacket);}
if(layer.trigger){layer.trigger(eventName,eventPacket);}});}},findHover:function(x,y,exclude){var list=this.storage.getDisplayList();for(var i=list.length-1;i>=0;i--){if(!list[i].silent&&list[i]!==exclude&&!list[i].ignore&&isHover(list[i],x,y)){return list[i];}}}};function isHover(displayable,x,y){if(displayable[displayable.rectHover?'rectContain':'contain'](x,y)){var el=displayable;while(el){if(el.silent||(el.clipPath&&!el.clipPath.contain(x,y))){return false;}
el=el.parent;}
return true;}
return false;}
function setTouchTimer(instance){instance._touching=true;clearTimeout(instance._touchTimer);instance._touchTimer=setTimeout(function(){instance._touching=false;},700);}
function usePointerEvent(){return false;}
function useTouchEvent(){return env.touchEventsSupported;}
function eventNameFix(name){return(name==='mousewheel'&&env.browser.firefox)?'DOMMouseScroll':name;}
util.mixin(Handler,Eventful);util.mixin(Handler,Draggable);return Handler;});